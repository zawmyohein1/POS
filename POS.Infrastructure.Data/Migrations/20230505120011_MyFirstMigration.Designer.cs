// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Infrastructure.Data.Context;

namespace POS.Infrastructure.Data.Migrations
{
    [DbContext(typeof(POSDbContext))]
    [Migration("20230505120011_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("POS.Domain.EntityModels.Audit_Trail", b =>
                {
                    b.Property<int>("Audit_Trail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Action_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Audit_Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Module_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Audit_Trail_ID");

                    b.ToTable("Audit_Trails");
                });

            modelBuilder.Entity("POS.Domain.EntityModels.DbSupplier", b =>
                {
                    b.Property<int>("Supplier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Supplier_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Supplier_ID");

                    b.ToTable("DbSuppliers");
                });

            modelBuilder.Entity("POS.Domain.EntityModels.Department", b =>
                {
                    b.Property<int>("Department_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Department_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("POS.Domain.EntityModels.Occupation", b =>
                {
                    b.Property<int>("Occupation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Occupation_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Occupation_ID");

                    b.HasIndex("Department_ID");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("POS.Domain.EntityModels.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_ID = 1,
                            Created = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@gmail.com",
                            Gender = 1,
                            IsDeleted = false,
                            Password = "yngWIE500",
                            Phone = "9484774",
                            Role = "",
                            User_Name = "admin"
                        },
                        new
                        {
                            User_ID = 2,
                            Created = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user@gmail.com",
                            Gender = 1,
                            IsDeleted = false,
                            Password = "yngWIE500",
                            Phone = "7575664",
                            Role = "",
                            User_Name = "user"
                        });
                });

            modelBuilder.Entity("POS.Domain.EntityModels.Occupation", b =>
                {
                    b.HasOne("POS.Domain.EntityModels.Department", "Department")
                        .WithMany("Occupations")
                        .HasForeignKey("Department_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("POS.Domain.EntityModels.Department", b =>
                {
                    b.Navigation("Occupations");
                });
#pragma warning restore 612, 618
        }
    }
}
